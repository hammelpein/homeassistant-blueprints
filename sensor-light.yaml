blueprint:
  name: Sensor Light
  description: >
    Still Missing 

  domain: automation
  input:
    presence_entity:
      name: "Presence Entity"
      description: >
        Still Missing
      selector:
        entity: {}

    timer_entity:
      name: Timer Helper
      description: >
        Still Missing
      selector:
        entity: 
          domain: timer

    light_targets:
      name: "Light Targets"
      description: >
        Still Missing
      selector:
        target:
          entity:
            domain: light
      default: []
      
    switch_targets:
      name: "Switch Targets"
      description: >
        Still Missing
      selector:
        target:
          entity:
            domain: switch
      default: []

    hold_entity:
      name: "Hold Entity"
      description: >
        Still Missing
      default: []
      selector:
        entity:
          domain: input_number


mode: parallel
max_exceeded: silent

variables:
  presence_entity: !input 'presence_entity'
  timer_entity: !input 'timer_entity'
  light_targets: !input 'light_targets'
  switch_targets: !input 'switch_targets'

  has_light_targets: "{{ light_targets | length > 0}}"
  has_switch_targets: "{{ switch_targets | length > 0}}"
  
triggers:
  - trigger: state
    entity_id: !input 'timer_entity'
    to: idle
    id: t_timer_finished
    
  - trigger: state
    entity_id: !input 'presence_entity'
    to: 'on'
    id: t_presence_on
      
  - trigger: state
    entity_id: !input 'presence_entity'
    to: 'off'
    id: t_presence_off

condition: []

action:
  - choose:
      - conditions:
        - condition: trigger
          id: t_timer_finished
          alias: "Handle Timer Finished Trigger"
        sequence:
          - if:
              - condition: template
                alias: "check for light targets to turn off"
                value_template: "{{ has_light_targets}}"
            then:
              - action: light.turn_off
                alias: "Turn Off all the Light Targets"
                target: 
                  entity_id: "{{ light_targets }}"

                  
          - if:
              - condition: template
                alias: "check for switch targets to turn off"
                value_template: "{{ has_switch_targets }}"
            then:
              - action: switch.turn_off
                alias: "Turn Off all the Switch Targets"
                target:
                  entity_id: "{{ switch_targets }}"

      - conditions:
        - condition: trigger
          id: t_presence_on
          alias: "Handle Presence On Trigger"
        sequence:
          - if:
              - condition: template
                alias: "check for light targets to turn on"
                value_template: "{{ has_light_targets}}"
            then:
              - action: light.turn_on
                alias: "Turn On all the Light Targetss"
                target: 
                  entity_id: "{{ light_targets }}"

                  
          - if:
              - alias: "check for Switch targets to turn on"
                condition: template
                value_template: "{{ has_switch_targets }}"
            then:
              - action: switch.turn_on
                alias: "Turn On all the Switche Targets"
                target:
                  entity_id: "{{ switch_targets }}"
          - action: timer.pause
            target:
              entity_id: "{{ timer_entity }}"

      - conditions:
        - condition: trigger
          id: t_presence_off
          alias: "Handle Presence Off Trigger"
        sequence:
          - action: timer.start
            alias: "Start the Timer"
            target:
              entity_id: "{{ timer_entity }}"
            metadata: {}
            data_template:
              duration: 300

